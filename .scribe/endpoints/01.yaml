name: 'Users management'
description: 'APIs for managing user accounts'
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/users
    metadata:
      groupName: 'Users management'
      groupDescription: 'APIs for managing user accounts'
      subgroup: ''
      subgroupDescription: ''
      title: 'Create New Users'
      description: |2-
         This endpoint allows you to register a new user.
         It's a really useful endpoint, and you should play around
         with it for a bit.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters. Must not be greater than 255 characters.'
        required: true
        example: ']|{+-0pBNvYg'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: ''
        required: true
        example: architecto
        type: string
        enumValues:
          - admin
          - student
          - mentor
        exampleWasSpecified: false
        nullable: false
        custom: []
      photo:
        name: photo
        description: 'Must be a valid URL.'
        required: true
        example: 'http://bailey.com/'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      gender:
        name: gender
        description: ''
        required: true
        example: architecto
        type: string
        enumValues:
          - male
          - female
        exampleWasSpecified: false
        nullable: false
        custom: []
      about:
        name: about
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: b
      email: architecto
      password: ']|{+-0pBNvYg'
      role: architecto
      photo: 'http://bailey.com/'
      gender: architecto
      about: architecto
    fileParameters: []
    responses:
      -
        status: 201
        content: '{"title":"Successfully Registered Users","code":201,"status":"STATUS_CREATED","data":{"id":"01JTJRCBKG6HHFFG6SFZDERQVF","name":"johndoe","email":"johndoe@gmail.com","role":"student","profile":{"gender":"male","about":"lorem ipsum","photo":"http:\/\/bailey.com\/johndoe.jpg"},"createdAt":"2025-05-06T12:15:56.000000Z","updatedAt":"2025-05-06T12:15:56.000000Z"}}'
        headers: []
        description: Successfully
        custom: []
      -
        status: 400
        content: '{"errors":[{"title":"Users Request Validation Failed","details":["The email has already been taken."],"code":400,"status":"Bad Request"}]}'
        headers: []
        description: 'Bad Request'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
